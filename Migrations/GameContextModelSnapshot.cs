// <auto-generated />
using End_of_all_Hope.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace End_of_all_Hope.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("End_of_all_Hope.Models.AccessPoint", b =>
                {
                    b.Property<int>("AccessPointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("AccessPointID");

                    b.ToTable("AccessPoints");

                    b.HasData(
                        new
                        {
                            AccessPointID = 1,
                            Description = "Enter the field.",
                            From = 1,
                            To = 2
                        },
                        new
                        {
                            AccessPointID = 2,
                            Description = "Travel west.",
                            From = 1,
                            To = 3
                        },
                        new
                        {
                            AccessPointID = 3,
                            Description = "Leave the field.",
                            From = 2,
                            To = 1
                        },
                        new
                        {
                            AccessPointID = 4,
                            Description = "Travel east.",
                            From = 3,
                            To = 1
                        },
                        new
                        {
                            AccessPointID = 5,
                            Description = "Travel west.",
                            From = 3,
                            To = 4
                        },
                        new
                        {
                            AccessPointID = 6,
                            Description = "Open the chest.",
                            From = 1,
                            To = 5
                        },
                        new
                        {
                            AccessPointID = 7,
                            Description = "Close the chest.",
                            From = 5,
                            To = 1
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.AccessRequirement", b =>
                {
                    b.Property<int>("AccessRequirementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessPointID")
                        .HasColumnType("int");

                    b.Property<string>("ClosedMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("OpenMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccessRequirementID");

                    b.ToTable("AccessRequirements");

                    b.HasData(
                        new
                        {
                            AccessRequirementID = 1,
                            AccessPointID = 1,
                            ClosedMessage = "The locked gate bars your way.",
                            ItemID = 1,
                            OpenMessage = "The gate opens quietly. It must be used frequently."
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.Consumable", b =>
                {
                    b.Property<int>("ConsumableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Heals")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.HasKey("ConsumableID");

                    b.ToTable("Consumables");

                    b.HasData(
                        new
                        {
                            ConsumableID = 1,
                            Heals = 5,
                            ItemID = 3
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.Enemy", b =>
                {
                    b.Property<int>("EnemyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Die")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("Modifier")
                        .HasColumnType("int");

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnemyID");

                    b.ToTable("Enemies");

                    b.HasData(
                        new
                        {
                            EnemyID = 1,
                            Description = "A strange jelly-like creature. It doesn't look very dangerous.",
                            Die = 2,
                            Exp = 5,
                            HP = 5,
                            Modifier = 0,
                            Multiplier = 1,
                            Name = "Blob"
                        },
                        new
                        {
                            EnemyID = 2,
                            Description = "A bandit so gaunt you'd almost rather give him your money than fight over it. Almost.",
                            Die = 3,
                            Exp = 10,
                            HP = 7,
                            Modifier = -1,
                            Multiplier = 1,
                            Name = "Malnourished Bandit"
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.FightLog", b =>
                {
                    b.Property<int>("FightLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DamageDone")
                        .HasColumnType("int");

                    b.Property<int>("ScreenEnemyID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FightLogID");

                    b.ToTable("FightLogs");

                    b.HasData(
                        new
                        {
                            FightLogID = 1,
                            DamageDone = 2,
                            ScreenEnemyID = 1,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.InventoryItem", b =>
                {
                    b.Property<int>("InventoryItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ScreenItemID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("InventoryItemID");

                    b.ToTable("InventoryItems");

                    b.HasData(
                        new
                        {
                            InventoryItemID = 1,
                            ItemID = 3,
                            Quantity = 2,
                            ScreenItemID = 0,
                            UserID = 1
                        },
                        new
                        {
                            InventoryItemID = 2,
                            ItemID = 3,
                            Quantity = 2,
                            ScreenItemID = 0,
                            UserID = 2
                        },
                        new
                        {
                            InventoryItemID = 3,
                            ItemID = 1,
                            Quantity = 1,
                            ScreenItemID = 1,
                            UserID = 2
                        },
                        new
                        {
                            InventoryItemID = 4,
                            ItemID = 2,
                            Quantity = 1,
                            ScreenItemID = 2,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            ItemTypeID = 3,
                            Name = "Gate Key"
                        },
                        new
                        {
                            ItemID = 2,
                            ItemTypeID = 1,
                            Name = "Rusty Sickle"
                        },
                        new
                        {
                            ItemID = 3,
                            ItemTypeID = 2,
                            Name = "Bread"
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.ItemType", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            ItemTypeID = 1,
                            Type = "Weapon"
                        },
                        new
                        {
                            ItemTypeID = 2,
                            Type = "Consumable"
                        },
                        new
                        {
                            ItemTypeID = 3,
                            Type = "Key"
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.Screen", b =>
                {
                    b.Property<int>("ScreenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScreenID");

                    b.ToTable("Screens");

                    b.HasData(
                        new
                        {
                            ScreenID = 1,
                            Description = "You stand at the end of a wide road, which continues to the west. The barren wilderness from whence you came lies to the east and south. To the north you will see a broad field surrounded by a tall fence and accessible only through a gate. A small chest sits on the ground by the fence.",
                            Name = "Dead End"
                        },
                        new
                        {
                            ScreenID = 2,
                            Description = "You stand in a broad field, freshly tilled but devoid of crops. The only exit lies south and leads to the end of a wide road.",
                            Name = "Broad Field"
                        },
                        new
                        {
                            ScreenID = 3,
                            Description = "You stand on a wide road which continues as far as you can see to the west. The road ends a short way east.",
                            Name = "Main Road"
                        },
                        new
                        {
                            ScreenID = 4,
                            Description = "Write a description for this screen, which lies directly west of 3.",
                            Name = "Main Road"
                        },
                        new
                        {
                            ScreenID = 5,
                            Description = "You open the chest and look in.",
                            Name = "Chest"
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.ScreenEnemy", b =>
                {
                    b.Property<int>("ScreenEnemyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnemyID")
                        .HasColumnType("int");

                    b.Property<int>("ScreenID")
                        .HasColumnType("int");

                    b.HasKey("ScreenEnemyID");

                    b.ToTable("ScreenEnemies");

                    b.HasData(
                        new
                        {
                            ScreenEnemyID = 1,
                            Action = "Blocks your path.",
                            EnemyID = 2,
                            ScreenID = 3
                        },
                        new
                        {
                            ScreenEnemyID = 2,
                            Action = "Snarls at you half-heartedly.",
                            EnemyID = 2,
                            ScreenID = 3
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.ScreenItem", b =>
                {
                    b.Property<int>("ScreenItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("ScreenID")
                        .HasColumnType("int");

                    b.Property<string>("TakenDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScreenItemID");

                    b.ToTable("ScreenItems");

                    b.HasData(
                        new
                        {
                            ScreenItemID = 1,
                            Action = "Take the gate key.",
                            Description = "A key sits at the bottom of the chest. It looks like it might fit a gate.",
                            ItemID = 1,
                            ScreenID = 5,
                            TakenDescription = "You don't see anything."
                        },
                        new
                        {
                            ScreenItemID = 2,
                            Action = "Take the sickle for protection.",
                            Description = "A sickle. Serviceable, though slightly rusted, rests against a wall.",
                            ItemID = 2,
                            ScreenID = 2,
                            TakenDescription = ""
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Screen")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Exp = 0,
                            HP = 20,
                            Level = 1,
                            Name = "Elliot",
                            Screen = 1
                        },
                        new
                        {
                            UserID = 2,
                            Exp = 0,
                            HP = 19,
                            Level = 1,
                            Name = "Other User",
                            Screen = 3
                        });
                });

            modelBuilder.Entity("End_of_all_Hope.Models.UserItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserItems");
                });

            modelBuilder.Entity("End_of_all_Hope.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Die")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Modifier")
                        .HasColumnType("int");

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.HasKey("WeaponID");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            WeaponID = 1,
                            Die = 3,
                            ItemID = 2,
                            Modifier = 0,
                            Multiplier = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
